service: product-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:*
      Resource: "*"
    - Effect: Allow
      Action: sqs:*
      Resource: 
        - Fn::GetAtt: [ CatalogItemsQueue, Arn ]
    - Effect: Allow
      Action: sns:*
      Resource: !Ref CreateProductSNSTopic
        
plugins:
  - serverless-auto-swagger
  - serverless-webpack
  - serverless-offline

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalog-items-queue

    CreateProductSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: create-product-topic

    CreateProductSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn: !Ref CreateProductSNSTopic
        Endpoint: faichuk.volodymyr@gmail.com

custom:
  apiBaseUrl: https://xuhosefi2j.execute-api.eu-west-1.amazonaws.com/dev
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: npm

  swagger:
    basePath: /dev
    info:
      title: Products API
      version: 1.0.0
    host: https://xuhosefi2j.execute-api.eu-west-1.amazonaws.com/dev

functions:
  getProductList:
    handler: src/handler.getProductList
    environment:
      PRODUCT_TABLE_NAME: PRODUCTS_DATA_TABLE
      STOCK_TABLE_NAME: STOCK_TABLE
    events:
      - http:
          path: products
          method: get
          cors: true

  getProductById:
    handler: src/handler.getProductById
    environment:
      PRODUCT_TABLE_NAME: PRODUCTS_DATA_TABLE
    events:
      - http:
          path: products/{productId}
          method: get
          cors: false

  createProduct:
    handler: src/handler.createProduct
    environment:
      PRODUCT_TABLE_NAME: PRODUCTS_DATA_TABLE
    events:
      - http:
          path: products
          method: post
          cors: false

  catalogBatchProcess:
    handler: src/handler.catalogBatchProcess
    environment:
      PRODUCT_TABLE_NAME: PRODUCTS_DATA_TABLE
      STOCK_TABLE_NAME: STOCK_TABLE
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn